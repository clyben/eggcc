# ARGS: 57000

# Prints out the integer factors of the input
# Trial division algorithm: https://en.wikipedia.org/wiki/Trial_division

# input: a positive integer
# output: the integer's factors

@main(loop_bound: int) {
  loop_incr: int = const 1;
  loop_counter: int = const 10;
  final_output: int = const 0;
.loop_cond:
  loop_cond: bool = lt loop_counter loop_bound;
  br loop_cond .loop_body .loop_done;
.loop_body:
  output: int = call @orig_main loop_counter;
  final_output: int = add final_output output;
  loop_counter: int = add loop_counter loop_incr;
  jmp .loop_cond;
.loop_done:
  print final_output;
}

@orig_main(num: int): int {
  zer: int = const 0;
  one: int = const 1;
  fac: int = const 2;
  sum: int = const 0;

.loopcheck:
  ispos: bool = lt one num;
  br ispos .loopbody .loopend;
  
.loopbody:
  quo: int = div num fac;
  tmp: int = mul quo fac;
  mod: int = sub num tmp;     # num % fac
  iszero: bool = eq mod zer;
  br iszero .ifyes .ifno;

.ifyes:
  sum: int = add sum fac;
  num: int = div num fac;
  jmp .loopcheck;

.ifno:
  fac: int = add fac one; 
  jmp .loopcheck;

.loopend:
  ret sum;
}