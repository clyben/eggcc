# ARGS: 9300

@main(loop_bound: int) {
  loop_incr: int = const 1;
  loop_counter: int = const 10;
  final_output: int = const 0;
.loop_cond:
  loop_cond: bool = lt loop_counter loop_bound;
  br loop_cond .loop_body .loop_done;
.loop_body:
  output: int = call @orig_main loop_counter;
  final_output: int = add final_output output;
  loop_counter: int = add loop_counter loop_incr;
  jmp .loop_cond;
.loop_done:
  print final_output;
}

@orig_main(input: int): int {
  x: int = id input;
  v1: int = id x;
  f: int = call @fac v1;
  f: int = id f;
  v2: int = id f;
  v3: int = const 0;
  ret v2;
}

@fac(x: int): int {
  v1: int = id x;
  v2: int = const 1;
  v3: bool = le v1 v2;
  br v3 .then.0 .else.0;
.then.0:
  v4: int = const 1;
  ret v4;
  jmp .endif.0;
.else.0:
.endif.0:
  v5: int = id x;
  v6: int = id x;
  v7: int = const 1;
  v8: int = sub v6 v7;
  v9: int = call @fac v8;
  v10: int = mul v5 v9;
  result: int = id v10;
  v11: int = id result;
  ret v11;
}
