(datatype Expr)

(sort EVecBase (Vec Expr))
(function EVec (EVecBase) Expr)

;; Every region gets a unique id
(datatype Id (id i64))
;; The id of the outermost region (used for tests)
(let global-id (id (i64-fresh!)))

;; Pure expressions
;; Leaf nodes need ids to be unique for the region they 
;; are in to avoid extracting something from another region
(function Num (Id i64) Expr)
(function Bool (Id bool) Expr)
(function badd (Expr Expr) Expr)
(function bsub (Expr Expr) Expr)
(function bmul (Expr Expr) Expr)
(function blt (Expr Expr) Expr)
(function band (Expr Expr) Expr)
(function bor (Expr Expr) Expr)
(function bnot (Expr) Expr)

;; Arguments
;; Take the id of the region it is in, and an index for which argument to return
(function Arg (Id i64) Expr)
;; Projects
;; Take a specific output of an Expr with multiple outputs
(function Project (Expr i64) Expr)

;; Non-pure expressions
;; Print takes a value, a print state, and returns a print state
(function PRINT (Expr Expr) Expr)
;; Call takes a function name, and arguments (as an EVec)
(function Call (String Expr) Expr)

;; Regions
;; arguments are predicate (in loop), inputs (outside loop), and outputs (inside loop)
(function Loop (Id Expr Expr Expr) Expr)
;; arguments are predicate (outside switch), inputs: EVec, and outputs: EVecVec
(function Switch (Id Expr Expr Expr) Expr)
;; Name and a outputs: EVec
(function Func (Id String Expr) Expr)

;; Rulesets
(ruleset analyses)
(ruleset repairs)
