---
source: tests/files.rs
assertion_line: 53
expression: "format!(\"{}\", res)"
---
@main {
.entry___:
  jmp .sblock___0;
.sblock___0:
.b1:
  zero.0: int = const 0;
  one.0: int = const 1;
  neg_one.0: int = const -1;
  vals.0: ptr<int> = alloc input;
  v1_: ptr<int> = alloc input;
  v3_: int = const 0;
  store v1_ v3_;
  v4_: ptr<int> = alloc input;
  v6_: int = const 1;
  vals_i.0: ptr<int> = ptradd v4_ v6_;
  v8_: ptr<int> = alloc input;
  v10_: int = const 1;
  v7_: ptr<int> = ptradd v8_ v10_;
  v11_: int = const 1;
  store v7_ v11_;
  i.0: int = const 2;
  v12_: int = const 2;
  v13_: int = const -1;
  i_minus_one.0: int = add v12_ v13_;
  v15_: int = const 2;
  v16_: int = const -1;
  v14_: int = add v15_ v16_;
  v17_: int = const -1;
  i_minus_two.0: int = add v14_ v17_;
  jmp .sblock___1;
.sblock___1:
.sblock___2:
.loop:
  vals_i_minus_two.0: ptr<int> = phi __undefined vals_i_minus_two.1;
  vals_i_minus_one.0: ptr<int> = phi __undefined vals_i_minus_one.1;
  vals_i.1: ptr<int> = phi vals_i.0 vals_i.2;
  tmp2.0: int = phi __undefined tmp2.1;
  tmp.0: int = phi __undefined tmp.2;
  i_minus_two.1: int = phi i_minus_two.0 i_minus_two.2;
  i_minus_one.1: int = phi i_minus_one.0 i_minus_one.2;
  i.1: int = phi i.0 i.2;
  cond.0: bool = phi __undefined cond.1;
  v36_: int = phi i.0 i.2;
  cond.1: bool = lt v36_ input;
  br cond.1 .sblock___6 .sblock___7;
.sblock___6:
  jmp .sblock___3;
.sblock___7:
  jmp .sblock___4;
.sblock___5:
.done:
  last.0: ptr<int> = ptradd vals.0 i_minus_one.1;
  v42_: ptr<int> = ptradd vals.0 i_minus_one.1;
  tmp.3: int = load v42_;
  v46_: ptr<int> = ptradd vals.0 i_minus_one.1;
  v45_: int = load v46_;
  print v45_;
  free vals.0;
  ret;
.sblock___8:
.exit___:
.sblock___4:
.body:
  vals_i.2: ptr<int> = ptradd vals.0 i.1;
  vals_i_minus_one.1: ptr<int> = ptradd vals.0 i_minus_one.1;
  vals_i_minus_two.1: ptr<int> = ptradd vals.0 i_minus_two.1;
  v56_: ptr<int> = ptradd vals.0 i_minus_one.1;
  tmp.1: int = load v56_;
  v59_: ptr<int> = ptradd vals.0 i_minus_two.1;
  tmp2.1: int = load v59_;
  v63_: ptr<int> = ptradd vals.0 i_minus_one.1;
  v62_: int = load v63_;
  v67_: ptr<int> = ptradd vals.0 i_minus_two.1;
  v66_: int = load v67_;
  tmp.2: int = add v62_ v66_;
  v70_: ptr<int> = ptradd vals.0 i.1;
  v75_: ptr<int> = ptradd vals.0 i_minus_one.1;
  v74_: int = load v75_;
  v79_: ptr<int> = ptradd vals.0 i_minus_two.1;
  v78_: int = load v79_;
  v73_: int = add v74_ v78_;
  store v70_ v73_;
  i.2: int = add i.1 one.0;
  i_minus_one.2: int = add i_minus_one.1 one.0;
  i_minus_two.2: int = add i_minus_two.1 one.0;
  jmp .sblock___3;
  jmp .sblock___2;
.sblock___3:
}

