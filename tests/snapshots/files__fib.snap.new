---
source: tests/files.rs
assertion_line: 53
expression: "format!(\"{}\", res)"
---
@main {
.entry___:
  jmp .sblock___0;
.sblock___0:
.b1:
  zero.0: int = const 0;
  one.0: int = const 1;
  neg_one.0: int = const -1;
  vals.0: ptr<int> = alloc input;
  v1_: ptr<int> = alloc input;
  v3_: int = const 0;
  store v1_ v3_;
  v4_: ptr<int> = alloc input;
  v6_: int = const 1;
  vals_i.0: ptr<int> = ptradd v4_ v6_;
  v8_: ptr<int> = alloc input;
  v10_: int = const 1;
  v7_: ptr<int> = ptradd v8_ v10_;
  v11_: int = const 1;
  store v7_ v11_;
  i.0: int = const 2;
  i_minus_one.0: int = const 1;
  i_minus_two.0: int = const 0;
  jmp .sblock___1;
.sblock___1:
.sblock___2:
.loop:
  vals_i_minus_two.0: ptr<int> = phi __undefined vals_i_minus_two.1;
  vals_i_minus_one.0: ptr<int> = phi __undefined vals_i_minus_one.1;
  vals_i.1: ptr<int> = phi vals_i.0 vals_i.2;
  tmp2.0: int = phi __undefined tmp2.1;
  tmp.0: int = phi __undefined tmp.2;
  i_minus_two.1: int = phi i_minus_two.0 i_minus_two.2;
  i_minus_one.1: int = phi i_minus_one.0 i_minus_one.2;
  i.1: int = phi i.0 i.2;
  cond.0: bool = phi __undefined cond.1;
  v30_: int = phi i.0 i.2;
  cond.1: bool = lt v30_ input;
  br cond.1 .sblock___6 .sblock___7;
.sblock___6:
  jmp .sblock___3;
.sblock___7:
  jmp .sblock___4;
.sblock___5:
.done:
  last.0: ptr<int> = ptradd vals.0 i_minus_one.1;
  v36_: ptr<int> = ptradd vals.0 i_minus_one.1;
  tmp.3: int = load v36_;
  v40_: ptr<int> = ptradd vals.0 i_minus_one.1;
  v39_: int = load v40_;
  print v39_;
  free vals.0;
  ret;
.sblock___8:
.exit___:
.sblock___4:
.body:
  vals_i.2: ptr<int> = ptradd vals.0 i.1;
  vals_i_minus_one.1: ptr<int> = ptradd vals.0 i_minus_one.1;
  vals_i_minus_two.1: ptr<int> = ptradd vals.0 i_minus_two.1;
  v50_: ptr<int> = ptradd vals.0 i_minus_one.1;
  tmp.1: int = load v50_;
  v53_: ptr<int> = ptradd vals.0 i_minus_two.1;
  tmp2.1: int = load v53_;
  v57_: ptr<int> = ptradd vals.0 i_minus_one.1;
  v56_: int = load v57_;
  v61_: ptr<int> = ptradd vals.0 i_minus_two.1;
  v60_: int = load v61_;
  tmp.2: int = add v56_ v60_;
  v64_: ptr<int> = ptradd vals.0 i.1;
  v69_: ptr<int> = ptradd vals.0 i_minus_one.1;
  v68_: int = load v69_;
  v73_: ptr<int> = ptradd vals.0 i_minus_two.1;
  v72_: int = load v73_;
  v67_: int = add v68_ v72_;
  store v64_ v67_;
  i.2: int = add i.1 one.0;
  i_minus_one.2: int = add i_minus_one.1 one.0;
  i_minus_two.2: int = add i_minus_two.1 one.0;
  jmp .sblock___3;
  jmp .sblock___2;
.sblock___3:
}

