;; constant_fold.rs adds most constant folding operations
;; this file is for special cases


;; eliminate gamma nodes for true and false cases
(rule ((= gamma
          ;; gamma predicate is true
          (Gamma (Node (PureOp (Const (BoolT) (const) (Bool true))))
                 inputs
                 outputs))
       (= (VOC true-branch) (VecVecOperandCtx-get outputs 1)))
      (
        ;; replace use of the gamma with
        ;; the true case
        (union
          gamma
          (OperandGroup
              (SubstVecOperandAll
                (VO true-branch)
                inputs)))))



(rule ((= gamma
          ;; gamma predicate is false
          (Gamma (Node (PureOp (Const (BoolT) (const) (Bool false))))
                 inputs
                 outputs))
       (= (VOC false-branch) (VecVecOperandCtx-get outputs 0)))
      (
        ;; replace use of the gamma with
        ;; the false case
        (union
          gamma
          (OperandGroup
              (SubstVecOperandAll (VO false-branch) inputs)))))

;; Eliminate theta
;; Unroll one layer and get rid of loop
(rule ((= theta
          ;; gamma predicate is false
          (Theta (Node (PureOp (Const (BoolT) (const) (Bool false))))
                 (VO inputs)
                 (VO outputs))))
      ((let after-one-iter (SubstVecOperandAll (VO outputs) (VO inputs)))
       (union theta
          (OperandGroup after-one-iter))))




