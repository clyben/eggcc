; We only have context for Exprs, not ListExprs.
(relation ContextOf (Expr Assumption))

; Base case: InContext means ContextOf
(rule ((InContext ctx e))
    ((ContextOf (InContext ctx e) ctx)) :ruleset always-run)

; Error checking - each expr should only have a single context
; TODO: this may not be true
; (rule ((ContextOf x ctx1)
;         (ContextOf x ctx2)
;         (!= ctx1 ctx2))
;     (
;         (panic "Equivalent expressions have nonequivalent context")
;     )
;     :ruleset error-checking)


(rule ((Top _op _x _y _z) (ContextOf _x ctx))
    ((ContextOf (Top _op _x _y _z) ctx)) :ruleset always-run)

(rule ((Top _op _x _y _z) (ContextOf _y ctx))
    ((ContextOf (Top _op _x _y _z) ctx)) :ruleset always-run)

(rule ((Top _op _x _y _z) (ContextOf _z ctx))
    ((ContextOf (Top _op _x _y _z) ctx)) :ruleset always-run)

(rule ((Bop _op _x _y) (ContextOf _x ctx))
    ((ContextOf (Bop _op _x _y) ctx)) :ruleset always-run)

(rule ((Bop _op _x _y) (ContextOf _y ctx))
    ((ContextOf (Bop _op _x _y) ctx)) :ruleset always-run)

(rule ((Uop _op _x) (ContextOf _x ctx))
    ((ContextOf (Uop _op _x) ctx)) :ruleset always-run)

(rule ((Get _tup _i) (ContextOf _tup ctx))
    ((ContextOf (Get _tup _i) ctx)) :ruleset always-run)

(rule ((Concat _order _x _y) (ContextOf _x ctx))
    ((ContextOf (Concat _order _x _y) ctx)) :ruleset always-run)

(rule ((Concat _order _x _y) (ContextOf _y ctx))
    ((ContextOf (Concat _order _x _y) ctx)) :ruleset always-run)

(rule ((Single _x) (ContextOf _x ctx))
    ((ContextOf (Single _x) ctx)) :ruleset always-run)

(rule ((Switch _pred _branches) (ContextOf _pred ctx))
    ((ContextOf (Switch _pred _branches) ctx)) :ruleset always-run)

(rule ((If _pred _then _else) (ContextOf _pred ctx))
    ((ContextOf (If _pred _then _else) ctx)) :ruleset always-run) 

(rule ((DoWhile _in _pred-and-output) (ContextOf _in ctx))
    ((ContextOf (DoWhile _in _pred-and-output) ctx)) :ruleset always-run)

(rule ((Call _func _arg) (ContextOf _arg ctx))
    ((ContextOf (Call _func _arg) ctx)) :ruleset always-run)

(rule ((Alloc _e _state _ty) (ContextOf _e ctx))
    ((ContextOf (Alloc _e _state _ty) ctx)) :ruleset always-run)

(rule ((Alloc _e _state _ty) (ContextOf _state ctx))
    ((ContextOf (Alloc _e _state _ty) ctx)) :ruleset always-run)
